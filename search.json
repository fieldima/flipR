[{"path":"https://fieldima.github.io/flipr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Fiel Dimayacyac Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fieldima.github.io/flipr/articles/flipr-vignette.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"How to use flipR","text":"package designed aide users manipulating order orientation data frames. namesake function package, flip(), inspired data generated analyzing model adequacy set character data phylogenetic tree. Included package data frame containing snippet data generated said analysis; data shown . can see, orientation rows columns conducive data manipulation, wrangling, plotting. package provides tools user solve problem.","code":"library(flipR)  simulation_data #>               1          2         3          4         5 #> m.sig 0.9290709 0.94505495 0.8791209 0.90509491 0.9330669 #> c.var 0.1758242 0.75524476 0.9210789 0.89910090 0.5694306 #> s.var 0.8911089 0.35564436 0.4335664 0.02797203 0.8131868 #> s.asr 0.5774226 0.08791209 0.6393606 0.48551449 0.5574426 #> s.hgt 0.3716284 0.39560440 0.4695305 0.57942058 0.9470529 #> d.cdf 0.8831169 0.87112887 0.9790210 0.89110889 0.8491508"},{"path":"https://fieldima.github.io/flipr/articles/flipr-vignette.html","id":"flip","dir":"Articles","previous_headings":"","what":"flip()","title":"How to use flipR","text":"Base R contains function t(), technically solves problem explained . switches rows columns matrix-like object inserted function. However, unlucky side effect converting data frame less useful form; matrix. essence, flip() wrapper base R t() converts result back useful data frame. aid user sliding already-existing scripts, flip() function, well functions package, can optionally return data form tibble tibble package data table data.table package.","code":"#t() flips the rows and columns but results in a matrix class(t(simulation_data)) #> [1] \"matrix\" \"array\"  #flip() returns a data frame class(flip(simulation_data)) #> [1] \"data.frame\" #An additional argument can convert the output into other data frame forms class(flip(simulation_data, \"DT\")) #> [1] \"data.table\" \"data.frame\" class(flip(simulation_data, \"TB\")) #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\""},{"path":"https://fieldima.github.io/flipr/articles/flipr-vignette.html","id":"the-invert-functions","dir":"Articles","previous_headings":"","what":"The invert functions","title":"How to use flipR","text":"addition flipping rows columns data frame object, one might need invert order rows columns. example, iris data set, might helpful see species petal columns first. Alternatively, might helpful see later rows first. example, USPersonalExpenditure data set one might want see Private Education first, ’d use invert_row() function. Just like flip() function, invert functions can also output data tibbles data tables.","code":"head(iris) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          5.1         3.5          1.4         0.2  setosa #> 2          4.9         3.0          1.4         0.2  setosa #> 3          4.7         3.2          1.3         0.2  setosa #> 4          4.6         3.1          1.5         0.2  setosa #> 5          5.0         3.6          1.4         0.2  setosa #> 6          5.4         3.9          1.7         0.4  setosa head(invert_col(iris)) #>   Species Petal.Width Petal.Length Sepal.Width Sepal.Length #> 1  setosa         0.2          1.4         3.5          5.1 #> 2  setosa         0.2          1.4         3.0          4.9 #> 3  setosa         0.2          1.3         3.2          4.7 #> 4  setosa         0.2          1.5         3.1          4.6 #> 5  setosa         0.2          1.4         3.6          5.0 #> 6  setosa         0.4          1.7         3.9          5.4 head(USPersonalExpenditure) #>                       1940   1945  1950 1955  1960 #> Food and Tobacco    22.200 44.500 59.60 73.2 86.80 #> Household Operation 10.500 15.500 29.00 36.5 46.20 #> Medical and Health   3.530  5.760  9.71 14.0 21.10 #> Personal Care        1.040  1.980  2.45  3.4  5.40 #> Private Education    0.341  0.974  1.80  2.6  3.64 head(invert_row(as.data.frame(USPersonalExpenditure))) #>                       1940   1945  1950 1955  1960 #> Private Education    0.341  0.974  1.80  2.6  3.64 #> Personal Care        1.040  1.980  2.45  3.4  5.40 #> Medical and Health   3.530  5.760  9.71 14.0 21.10 #> Household Operation 10.500 15.500 29.00 36.5 46.20 #> Food and Tobacco    22.200 44.500 59.60 73.2 86.80 invert_col(iris, \"DT\") #>        Species Petal.Width Petal.Length Sepal.Width Sepal.Length #>   1:    setosa         0.2          1.4         3.5          5.1 #>   2:    setosa         0.2          1.4         3.0          4.9 #>   3:    setosa         0.2          1.3         3.2          4.7 #>   4:    setosa         0.2          1.5         3.1          4.6 #>   5:    setosa         0.2          1.4         3.6          5.0 #>  ---                                                             #> 146: virginica         2.3          5.2         3.0          6.7 #> 147: virginica         1.9          5.0         2.5          6.3 #> 148: virginica         2.0          5.2         3.0          6.5 #> 149: virginica         2.3          5.4         3.4          6.2 #> 150: virginica         1.8          5.1         3.0          5.9 invert_row(iris, \"TB\") #> # A tibble: 150 × 5 #>    Sepal.Length Sepal.Width Petal.Length Petal.Width Species   #>           <dbl>       <dbl>        <dbl>       <dbl> <fct>     #>  1          5.9         3            5.1         1.8 virginica #>  2          6.2         3.4          5.4         2.3 virginica #>  3          6.5         3            5.2         2   virginica #>  4          6.3         2.5          5           1.9 virginica #>  5          6.7         3            5.2         2.3 virginica #>  6          6.7         3.3          5.7         2.5 virginica #>  7          6.8         3.2          5.9         2.3 virginica #>  8          5.8         2.7          5.1         1.9 virginica #>  9          6.9         3.1          5.1         2.3 virginica #> 10          6.7         3.1          5.6         2.4 virginica #> # … with 140 more rows"},{"path":"https://fieldima.github.io/flipr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Fiel Dimayacyac. Author, maintainer.","code":""},{"path":"https://fieldima.github.io/flipr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Dimayacyac F (2021). flipR: Flips Dataframes R. https://github.com/fieldima/flipr, https://fieldima.github.io/flipr.","code":"@Manual{,   title = {flipR: Flips Dataframes in R},   author = {Fiel Dimayacyac},   year = {2021},   note = {https://github.com/fieldima/flipr, https://fieldima.github.io/flipr}, }"},{"path":"https://fieldima.github.io/flipr/index.html","id":"flipr","dir":"","previous_headings":"","what":"Flips Dataframes in R","title":"Flips Dataframes in R","text":"goal flipR aid user inverting flipping data frames. includes flipping rows columns, inverting order rows, inverting order columns. Included example dataset.","code":""},{"path":"https://fieldima.github.io/flipr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Flips Dataframes in R","text":"can install released version flipR Github :","code":"devtools::install_github(\"fieldima/flipR\", ref = \"0.2.0\")"},{"path":"https://fieldima.github.io/flipr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Flips Dataframes in R","text":"basic example use flipR:","code":"library(flipR)  #Packaged with flipR is a set of simulation data that needs to be flipped. sim <- simulation_data  #To flip the rows and columns, simply use flip() flip(sim) #>       m.sig     c.var      s.var      s.asr     s.hgt     d.cdf #> 1 0.9290709 0.1758242 0.89110889 0.57742258 0.3716284 0.8831169 #> 2 0.9450549 0.7552448 0.35564436 0.08791209 0.3956044 0.8711289 #> 3 0.8791209 0.9210789 0.43356643 0.63936064 0.4695305 0.9790210 #> 4 0.9050949 0.8991009 0.02797203 0.48551449 0.5794206 0.8911089 #> 5 0.9330669 0.5694306 0.81318681 0.55744256 0.9470529 0.8491508  #This package also gives the user the ability to invert the order of rows or columns invert_row(sim) #>               1          2         3          4         5 #> d.cdf 0.8831169 0.87112887 0.9790210 0.89110889 0.8491508 #> s.hgt 0.3716284 0.39560440 0.4695305 0.57942058 0.9470529 #> s.asr 0.5774226 0.08791209 0.6393606 0.48551449 0.5574426 #> s.var 0.8911089 0.35564436 0.4335664 0.02797203 0.8131868 #> c.var 0.1758242 0.75524476 0.9210789 0.89910090 0.5694306 #> m.sig 0.9290709 0.94505495 0.8791209 0.90509491 0.9330669 invert_col(sim) #>               5          4         3          2         1 #> m.sig 0.9330669 0.90509491 0.8791209 0.94505495 0.9290709 #> c.var 0.5694306 0.89910090 0.9210789 0.75524476 0.1758242 #> s.var 0.8131868 0.02797203 0.4335664 0.35564436 0.8911089 #> s.asr 0.5574426 0.48551449 0.6393606 0.08791209 0.5774226 #> s.hgt 0.9470529 0.57942058 0.4695305 0.39560440 0.3716284 #> d.cdf 0.8491508 0.89110889 0.9790210 0.87112887 0.8831169  #Finally, all functions in this package can output data in the form of data frames, tibbles, or data tables flip(sim, \"TB\") #> # A tibble: 5 x 6 #>   m.sig c.var  s.var  s.asr s.hgt d.cdf #>   <dbl> <dbl>  <dbl>  <dbl> <dbl> <dbl> #> 1 0.929 0.176 0.891  0.577  0.372 0.883 #> 2 0.945 0.755 0.356  0.0879 0.396 0.871 #> 3 0.879 0.921 0.434  0.639  0.470 0.979 #> 4 0.905 0.899 0.0280 0.486  0.579 0.891 #> 5 0.933 0.569 0.813  0.557  0.947 0.849 flip(sim, \"DT\") #>        m.sig     c.var      s.var      s.asr     s.hgt     d.cdf #> 1: 0.9290709 0.1758242 0.89110889 0.57742258 0.3716284 0.8831169 #> 2: 0.9450549 0.7552448 0.35564436 0.08791209 0.3956044 0.8711289 #> 3: 0.8791209 0.9210789 0.43356643 0.63936064 0.4695305 0.9790210 #> 4: 0.9050949 0.8991009 0.02797203 0.48551449 0.5794206 0.8911089 #> 5: 0.9330669 0.5694306 0.81318681 0.55744256 0.9470529 0.8491508  invert_row(sim, \"DF\") #>               1          2         3          4         5 #> d.cdf 0.8831169 0.87112887 0.9790210 0.89110889 0.8491508 #> s.hgt 0.3716284 0.39560440 0.4695305 0.57942058 0.9470529 #> s.asr 0.5774226 0.08791209 0.6393606 0.48551449 0.5574426 #> s.var 0.8911089 0.35564436 0.4335664 0.02797203 0.8131868 #> c.var 0.1758242 0.75524476 0.9210789 0.89910090 0.5694306 #> m.sig 0.9290709 0.94505495 0.8791209 0.90509491 0.9330669 invert_row(sim, \"TB\") #> # A tibble: 6 x 5 #>     `1`    `2`   `3`    `4`   `5` #>   <dbl>  <dbl> <dbl>  <dbl> <dbl> #> 1 0.883 0.871  0.979 0.891  0.849 #> 2 0.372 0.396  0.470 0.579  0.947 #> 3 0.577 0.0879 0.639 0.486  0.557 #> 4 0.891 0.356  0.434 0.0280 0.813 #> 5 0.176 0.755  0.921 0.899  0.569 #> 6 0.929 0.945  0.879 0.905  0.933  invert_col(sim, \"DT\") #>            5          4         3          2         1 #> 1: 0.9330669 0.90509491 0.8791209 0.94505495 0.9290709 #> 2: 0.5694306 0.89910090 0.9210789 0.75524476 0.1758242 #> 3: 0.8131868 0.02797203 0.4335664 0.35564436 0.8911089 #> 4: 0.5574426 0.48551449 0.6393606 0.08791209 0.5774226 #> 5: 0.9470529 0.57942058 0.4695305 0.39560440 0.3716284 #> 6: 0.8491508 0.89110889 0.9790210 0.87112887 0.8831169"},{"path":"https://fieldima.github.io/flipr/reference/flip.html","id":null,"dir":"Reference","previous_headings":"","what":"Flipping data frames. — flip","title":"Flipping data frames. — flip","text":"function flips rows columns data frame optionally returns flipped data frame tibble data table.","code":""},{"path":"https://fieldima.github.io/flipr/reference/flip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flipping data frames. — flip","text":"","code":"flip(df, out)"},{"path":"https://fieldima.github.io/flipr/reference/flip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flipping data frames. — flip","text":"df Short data frame, first argument data frame type. Short output, argument determines form resulting data. Options include 'DF' data frame, 'TB' tibble, 'DT' data table.","code":""},{"path":"https://fieldima.github.io/flipr/reference/flip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flipping data frames. — flip","text":"Either data frame, data table, tibble columns rows flipped.","code":""},{"path":"https://fieldima.github.io/flipr/reference/flip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flipping data frames. — flip","text":"Function return errors first argument type data frame. optional argument determines output data frame, tibble, data table. Defaults data frame left empty.","code":""},{"path":"https://fieldima.github.io/flipr/reference/flip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flipping data frames. — flip","text":"","code":"flip(mtcars) #>      Mazda.RX4 Mazda.RX4.Wag Datsun.710 Hornet.4.Drive Hornet.Sportabout #> mpg      21.00        21.000      22.80         21.400             18.70 #> cyl       6.00         6.000       4.00          6.000              8.00 #> disp    160.00       160.000     108.00        258.000            360.00 #> hp      110.00       110.000      93.00        110.000            175.00 #> drat      3.90         3.900       3.85          3.080              3.15 #> wt        2.62         2.875       2.32          3.215              3.44 #> qsec     16.46        17.020      18.61         19.440             17.02 #> vs        0.00         0.000       1.00          1.000              0.00 #> am        1.00         1.000       1.00          0.000              0.00 #> gear      4.00         4.000       4.00          3.000              3.00 #> carb      4.00         4.000       1.00          1.000              2.00 #>      Valiant Duster.360 Merc.240D Merc.230 Merc.280 Merc.280C Merc.450SE #> mpg    18.10      14.30     24.40    22.80    19.20     17.80      16.40 #> cyl     6.00       8.00      4.00     4.00     6.00      6.00       8.00 #> disp  225.00     360.00    146.70   140.80   167.60    167.60     275.80 #> hp    105.00     245.00     62.00    95.00   123.00    123.00     180.00 #> drat    2.76       3.21      3.69     3.92     3.92      3.92       3.07 #> wt      3.46       3.57      3.19     3.15     3.44      3.44       4.07 #> qsec   20.22      15.84     20.00    22.90    18.30     18.90      17.40 #> vs      1.00       0.00      1.00     1.00     1.00      1.00       0.00 #> am      0.00       0.00      0.00     0.00     0.00      0.00       0.00 #> gear    3.00       3.00      4.00     4.00     4.00      4.00       3.00 #> carb    1.00       4.00      2.00     2.00     4.00      4.00       3.00 #>      Merc.450SL Merc.450SLC Cadillac.Fleetwood Lincoln.Continental #> mpg       17.30       15.20              10.40              10.400 #> cyl        8.00        8.00               8.00               8.000 #> disp     275.80      275.80             472.00             460.000 #> hp       180.00      180.00             205.00             215.000 #> drat       3.07        3.07               2.93               3.000 #> wt         3.73        3.78               5.25               5.424 #> qsec      17.60       18.00              17.98              17.820 #> vs         0.00        0.00               0.00               0.000 #> am         0.00        0.00               0.00               0.000 #> gear       3.00        3.00               3.00               3.000 #> carb       3.00        3.00               4.00               4.000 #>      Chrysler.Imperial Fiat.128 Honda.Civic Toyota.Corolla Toyota.Corona #> mpg             14.700    32.40      30.400         33.900        21.500 #> cyl              8.000     4.00       4.000          4.000         4.000 #> disp           440.000    78.70      75.700         71.100       120.100 #> hp             230.000    66.00      52.000         65.000        97.000 #> drat             3.230     4.08       4.930          4.220         3.700 #> wt               5.345     2.20       1.615          1.835         2.465 #> qsec            17.420    19.47      18.520         19.900        20.010 #> vs               0.000     1.00       1.000          1.000         1.000 #> am               0.000     1.00       1.000          1.000         0.000 #> gear             3.000     4.00       4.000          4.000         3.000 #> carb             4.000     1.00       2.000          1.000         1.000 #>      Dodge.Challenger AMC.Javelin Camaro.Z28 Pontiac.Firebird Fiat.X1.9 #> mpg             15.50      15.200      13.30           19.200    27.300 #> cyl              8.00       8.000       8.00            8.000     4.000 #> disp           318.00     304.000     350.00          400.000    79.000 #> hp             150.00     150.000     245.00          175.000    66.000 #> drat             2.76       3.150       3.73            3.080     4.080 #> wt               3.52       3.435       3.84            3.845     1.935 #> qsec            16.87      17.300      15.41           17.050    18.900 #> vs               0.00       0.000       0.00            0.000     1.000 #> am               0.00       0.000       0.00            0.000     1.000 #> gear             3.00       3.000       3.00            3.000     4.000 #> carb             2.00       2.000       4.00            2.000     1.000 #>      Porsche.914.2 Lotus.Europa Ford.Pantera.L Ferrari.Dino Maserati.Bora #> mpg          26.00       30.400          15.80        19.70         15.00 #> cyl           4.00        4.000           8.00         6.00          8.00 #> disp        120.30       95.100         351.00       145.00        301.00 #> hp           91.00      113.000         264.00       175.00        335.00 #> drat          4.43        3.770           4.22         3.62          3.54 #> wt            2.14        1.513           3.17         2.77          3.57 #> qsec         16.70       16.900          14.50        15.50         14.60 #> vs            0.00        1.000           0.00         0.00          0.00 #> am            1.00        1.000           1.00         1.00          1.00 #> gear          5.00        5.000           5.00         5.00          5.00 #> carb          2.00        2.000           4.00         6.00          8.00 #>      Volvo.142E #> mpg       21.40 #> cyl        4.00 #> disp     121.00 #> hp       109.00 #> drat       4.11 #> wt         2.78 #> qsec      18.60 #> vs         1.00 #> am         1.00 #> gear       4.00 #> carb       2.00 flip(mtcars, \"TB\") #> # A tibble: 11 × 32 #>    Mazda.RX4 Mazda.RX4.Wag Datsun.710 Hornet.4.Drive Hornet.Sportabout Valiant #>        <dbl>         <dbl>      <dbl>          <dbl>             <dbl>   <dbl> #>  1     21            21         22.8           21.4              18.7    18.1  #>  2      6             6          4              6                 8       6    #>  3    160           160        108            258               360     225    #>  4    110           110         93            110               175     105    #>  5      3.9           3.9        3.85           3.08              3.15    2.76 #>  6      2.62          2.88       2.32           3.22              3.44    3.46 #>  7     16.5          17.0       18.6           19.4              17.0    20.2  #>  8      0             0          1              1                 0       1    #>  9      1             1          1              0                 0       0    #> 10      4             4          4              3                 3       3    #> 11      4             4          1              1                 2       1    #> # … with 26 more variables: Duster.360 <dbl>, Merc.240D <dbl>, Merc.230 <dbl>, #> #   Merc.280 <dbl>, Merc.280C <dbl>, Merc.450SE <dbl>, Merc.450SL <dbl>, #> #   Merc.450SLC <dbl>, Cadillac.Fleetwood <dbl>, Lincoln.Continental <dbl>, #> #   Chrysler.Imperial <dbl>, Fiat.128 <dbl>, Honda.Civic <dbl>, #> #   Toyota.Corolla <dbl>, Toyota.Corona <dbl>, Dodge.Challenger <dbl>, #> #   AMC.Javelin <dbl>, Camaro.Z28 <dbl>, Pontiac.Firebird <dbl>, #> #   Fiat.X1.9 <dbl>, Porsche.914.2 <dbl>, Lotus.Europa <dbl>, …"},{"path":"https://fieldima.github.io/flipr/reference/invert_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverting data frame columns. — invert_col","title":"Inverting data frame columns. — invert_col","text":"function invert order columns data frame optionally returns data frame tibble data table.","code":""},{"path":"https://fieldima.github.io/flipr/reference/invert_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverting data frame columns. — invert_col","text":"","code":"invert_col(df, out)"},{"path":"https://fieldima.github.io/flipr/reference/invert_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverting data frame columns. — invert_col","text":"df Short data frame, first argument data frame type. Short output, argument determines form resulting data. Options include 'DF' data frame, 'TB' tibble, 'DT' data table.","code":""},{"path":"https://fieldima.github.io/flipr/reference/invert_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverting data frame columns. — invert_col","text":"Either data frame, data table, tibble column order inverted.","code":""},{"path":"https://fieldima.github.io/flipr/reference/invert_col.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverting data frame columns. — invert_col","text":"Function return errors first argument type data frame. optional argument determines output data frame, tibble, data table. Defaults data frame left empty.","code":""},{"path":"https://fieldima.github.io/flipr/reference/invert_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverting data frame columns. — invert_col","text":"","code":"invert_col(mtcars) #>                     carb gear am vs  qsec    wt drat  hp  disp cyl  mpg #> Mazda RX4              4    4  1  0 16.46 2.620 3.90 110 160.0   6 21.0 #> Mazda RX4 Wag          4    4  1  0 17.02 2.875 3.90 110 160.0   6 21.0 #> Datsun 710             1    4  1  1 18.61 2.320 3.85  93 108.0   4 22.8 #> Hornet 4 Drive         1    3  0  1 19.44 3.215 3.08 110 258.0   6 21.4 #> Hornet Sportabout      2    3  0  0 17.02 3.440 3.15 175 360.0   8 18.7 #> Valiant                1    3  0  1 20.22 3.460 2.76 105 225.0   6 18.1 #> Duster 360             4    3  0  0 15.84 3.570 3.21 245 360.0   8 14.3 #> Merc 240D              2    4  0  1 20.00 3.190 3.69  62 146.7   4 24.4 #> Merc 230               2    4  0  1 22.90 3.150 3.92  95 140.8   4 22.8 #> Merc 280               4    4  0  1 18.30 3.440 3.92 123 167.6   6 19.2 #> Merc 280C              4    4  0  1 18.90 3.440 3.92 123 167.6   6 17.8 #> Merc 450SE             3    3  0  0 17.40 4.070 3.07 180 275.8   8 16.4 #> Merc 450SL             3    3  0  0 17.60 3.730 3.07 180 275.8   8 17.3 #> Merc 450SLC            3    3  0  0 18.00 3.780 3.07 180 275.8   8 15.2 #> Cadillac Fleetwood     4    3  0  0 17.98 5.250 2.93 205 472.0   8 10.4 #> Lincoln Continental    4    3  0  0 17.82 5.424 3.00 215 460.0   8 10.4 #> Chrysler Imperial      4    3  0  0 17.42 5.345 3.23 230 440.0   8 14.7 #> Fiat 128               1    4  1  1 19.47 2.200 4.08  66  78.7   4 32.4 #> Honda Civic            2    4  1  1 18.52 1.615 4.93  52  75.7   4 30.4 #> Toyota Corolla         1    4  1  1 19.90 1.835 4.22  65  71.1   4 33.9 #> Toyota Corona          1    3  0  1 20.01 2.465 3.70  97 120.1   4 21.5 #> Dodge Challenger       2    3  0  0 16.87 3.520 2.76 150 318.0   8 15.5 #> AMC Javelin            2    3  0  0 17.30 3.435 3.15 150 304.0   8 15.2 #> Camaro Z28             4    3  0  0 15.41 3.840 3.73 245 350.0   8 13.3 #> Pontiac Firebird       2    3  0  0 17.05 3.845 3.08 175 400.0   8 19.2 #> Fiat X1-9              1    4  1  1 18.90 1.935 4.08  66  79.0   4 27.3 #> Porsche 914-2          2    5  1  0 16.70 2.140 4.43  91 120.3   4 26.0 #> Lotus Europa           2    5  1  1 16.90 1.513 3.77 113  95.1   4 30.4 #> Ford Pantera L         4    5  1  0 14.50 3.170 4.22 264 351.0   8 15.8 #> Ferrari Dino           6    5  1  0 15.50 2.770 3.62 175 145.0   6 19.7 #> Maserati Bora          8    5  1  0 14.60 3.570 3.54 335 301.0   8 15.0 #> Volvo 142E             2    4  1  1 18.60 2.780 4.11 109 121.0   4 21.4 invert_col(mtcars, \"TB\") #> # A tibble: 32 × 11 #>     carb  gear    am    vs  qsec    wt  drat    hp  disp   cyl   mpg #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     4     4     1     0  16.5  2.62  3.9    110  160      6  21   #>  2     4     4     1     0  17.0  2.88  3.9    110  160      6  21   #>  3     1     4     1     1  18.6  2.32  3.85    93  108      4  22.8 #>  4     1     3     0     1  19.4  3.22  3.08   110  258      6  21.4 #>  5     2     3     0     0  17.0  3.44  3.15   175  360      8  18.7 #>  6     1     3     0     1  20.2  3.46  2.76   105  225      6  18.1 #>  7     4     3     0     0  15.8  3.57  3.21   245  360      8  14.3 #>  8     2     4     0     1  20    3.19  3.69    62  147.     4  24.4 #>  9     2     4     0     1  22.9  3.15  3.92    95  141.     4  22.8 #> 10     4     4     0     1  18.3  3.44  3.92   123  168.     6  19.2 #> # … with 22 more rows"},{"path":"https://fieldima.github.io/flipr/reference/invert_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverting data frame rows. — invert_row","title":"Inverting data frame rows. — invert_row","text":"function invert order rows data frame optionally returns data frame tibble data table.","code":""},{"path":"https://fieldima.github.io/flipr/reference/invert_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverting data frame rows. — invert_row","text":"","code":"invert_row(df, out)"},{"path":"https://fieldima.github.io/flipr/reference/invert_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverting data frame rows. — invert_row","text":"df Short data frame, first argument data frame type. Short output, argument determines form resulting data. Options include 'DF' data frame, 'TB' tibble, 'DT' data table.","code":""},{"path":"https://fieldima.github.io/flipr/reference/invert_row.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverting data frame rows. — invert_row","text":"Either data frame, data table, tibble row order inverted.","code":""},{"path":"https://fieldima.github.io/flipr/reference/invert_row.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverting data frame rows. — invert_row","text":"Function return errors first argument type data frame. optional argument determines output data frame, tibble, data table. Defaults data frame left empty.","code":""},{"path":"https://fieldima.github.io/flipr/reference/invert_row.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverting data frame rows. — invert_row","text":"","code":"invert_row(mtcars) #>                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2 #> Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 invert_row(mtcars, \"TB\") #> # A tibble: 32 × 11 #>      mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1  21.4     4 121     109  4.11  2.78  18.6     1     1     4     2 #>  2  15       8 301     335  3.54  3.57  14.6     0     1     5     8 #>  3  19.7     6 145     175  3.62  2.77  15.5     0     1     5     6 #>  4  15.8     8 351     264  4.22  3.17  14.5     0     1     5     4 #>  5  30.4     4  95.1   113  3.77  1.51  16.9     1     1     5     2 #>  6  26       4 120.     91  4.43  2.14  16.7     0     1     5     2 #>  7  27.3     4  79      66  4.08  1.94  18.9     1     1     4     1 #>  8  19.2     8 400     175  3.08  3.84  17.0     0     0     3     2 #>  9  13.3     8 350     245  3.73  3.84  15.4     0     0     3     4 #> 10  15.2     8 304     150  3.15  3.44  17.3     0     0     3     2 #> # … with 22 more rows"},{"path":"https://fieldima.github.io/flipr/reference/simulation_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Test statistics of a phylogenetic model test. — simulation_data","title":"Test statistics of a phylogenetic model test. — simulation_data","text":"dataset containing 5 simulations p values set test statistics generated determine adequacy phylogenetic model given set character data.","code":""},{"path":"https://fieldima.github.io/flipr/reference/simulation_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test statistics of a phylogenetic model test. — simulation_data","text":"","code":"simulation_data"},{"path":"https://fieldima.github.io/flipr/reference/simulation_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Test statistics of a phylogenetic model test. — simulation_data","text":"data frame 6 rows 5 variables: 1 First simulation, unitless 2 Second simulation, unitless 3 Third simulation, unitless 4 Fourth simulation, unitless 5 Fifth simulation, unitless","code":""},{"path":"https://fieldima.github.io/flipr/reference/simulation_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Test statistics of a phylogenetic model test. — simulation_data","text":"Simulated using R package arbutus","code":""},{"path":[]},{"path":"https://fieldima.github.io/flipr/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"flipR 0.2.0","text":"Renamed package flipr flipR due already existing flipr package Built pkgdown site hosting github.io Created vignette instruct users use functions Added two new functions; invert_col() invert_row() aid users inverting order columns rows data frames Added NEWS.md file track changes package.","code":""},{"path":"https://fieldima.github.io/flipr/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"flipR 0.2.0","text":"Added option output files data table format","code":""}]
